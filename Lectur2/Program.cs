// ДВУМЕРНЫЕ МАССИВЫ
// массив сток:
// string[,] table = new string[2,3]
// массив чисел:
// int[,] matrix = new int [5,8]
// пример со строками:

// string[,] table = new string[2,5];
// string.Empty (инициализация для строг)
// table[0,0] table[0,1] table[0,2] table[0,3] table[0,4] 
// table[1,0] table[1,1] table[1,2] table[1,3] table[1,4] 

// table[1,2] = "слово";
// for(int ros = 0; ros < 2; ros++) //цикл для строк
// {
//     for(int colums = 0; colums < 5; colums++)
//     {
//         Console.WriteLine($"-{table[ros,colums]}-");
//     }
// }

// пример с числами:
// int[,] matrix = new int [3,4];
// for(int i = 0; i < 3; i++) // обычно записывают так: for(int i = 0; i < matrix.GetLength(0); i++) для строк
// {
//     for(int j = 0; j < 4; j++) // обычно записывают так: for(int i = 0; i < matrix.GetLength(1); i++) для столбцов
//     {
//         Console.Write($"{matrix[i,j]} ");
//     }
//     Console.WriteLine();
// }
//теперь надо заполнить матрице и вывести на экран
// void PrintArray(int[,] matr)
// {
//     for(int i = 0; i < matr.GetLength(0); i++) 
//     {
//         for(int j = 0; j < matr.GetLength(1); j++) 
//         {
//             Console.Write($"{matr[i,j]} ");
//         }
//         Console.WriteLine();
//     }
// }
// void FillArray(int[,] matr)
// {
//     for(int i = 0; i < matr.GetLength(0); i++) 
//     {
//         for(int j = 0; j < matr.GetLength(1); j++) 
//         {
//             matr[i,j] = new Random().Next(1,10);
//         }
// }
// }
// int[,] matrix = new int [3,4];
// PrintArray(matrix);
// FillArray(matrix);
// Console.WriteLine();
// PrintArray(matrix);

// Пример с закраской картинки с использованием массива

// int[,] pic = new int[,]
// {
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//1
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//2
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//3
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//4
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//5
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//6
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//7
//     { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//8
//     { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//9
//     { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},//10
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},//13
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},//12
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0},//13
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},//14
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},//15
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0},//16
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},//17
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},//18
//     { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},//19
//     { 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},//20
//     { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},//21
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},//22
//     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}//23
// };
// void PrintImage(int[,] image)
// {
//     for(int i = 0; i < image.GetLength(0); i++) 
//     {
//         for(int j = 0; j < image.GetLength(1); j++) 
//         {
//             if(image[i,j] == 0) Console.Write($" ");
//             else Console.Write($"+");
//         }
//         Console.WriteLine();
//     }
// }

// void FillImage(int row, int col)
// {
//     if (pic[row, col] == 0)
//     {
//         pic[row, col] = 1;
//         FillImage(row - 1, col);
//         FillImage(row, col - 1);
//         FillImage(row + 1, col);
//         FillImage(row, col + 1);
//     }
// }

// PrintImage(pic);
// FillImage(12,15);
// PrintImage(pic);

//РЕКУРСИЯ ФАКТОРИАЛА 

// double Factorial(int n)
// {
//     if(n == 1) return n;
//     else return n * Factorial(n-1);

// }
// for(int i = 1; i < 40; i++)
// {
//     Console.WriteLine($"{i}! = {Factorial(i)}");
// }
//РЕКУРСИЯ С ЧИСЛАМИ ФИБОНАЧИ

// double Fibonachi(int n)
// {
//     if(n == 1 || n == 2) return 1;
//     else return Fibonachi(n - 1) + Fibonachi(n - 2);
// }
// for(int i = 1; i < 50; i++)
// {
//    Console.WriteLine($"f{i} = {Fibonachi(i)}");
// }